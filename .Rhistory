pacman::p_load(readxl, sandwich, car, lmtest, TSstudio, lmtest, forecast
, vars, urca, tsDyn, tidyverse, glue, xts, tseries)
entradas <- "Datos_ent/"
salidas <- "Datos_sal/"
# ------------------------------------------------------------------------------#
# Lectura datos ----
Datos_ent  <- read_xlsx(glue("{entradas}Base.xlsx")
,sheet = "Base",range = "a3:d214")
Datos_ent_xts <- xts(Datos_ent[,-1],order.by = as.Date(Datos_ent$fecha))
# Calculo retornos log. ----
Datos_ent_xts_dlx <- Datos_ent_xts %>% log() %>% diff(.,lag=1, differences = 1 ) %>% na.omit()
Datos_ent_xts_slx <- Datos_ent_xts %>% log() %>% diff(.,lag=12, differences = 1 ) %>% na.omit()
mod1 <- VAR(y = Datos_ent_xts_dlx, p = 2, type = "const")
mod2 <- VAR(y = Datos_ent_xts_slx, lag.max = 4, type = "const", ic = "AIC")
## correlación serial ----
serial_mod1 <- serial.test(mod1,lags.pt = 16, type = "PT.asymptotic")
serial_mod2 <- serial.test(mod2,lags.pt = 16, type = "PT.asymptotic")
## Normalidad ----
normal_mod1 <- normality.test(mod1, multivariate.only = "TRUE")
normal_mod2 <- normality.test(mod2, multivariate.only = "TRUE")
## Heterocedasticidad ----
hetero_mod1 <- arch.test(mod1, multivariate.only = "TRUE")
hetero_mod2 <- arch.test(mod2, multivariate.only = "TRUE")
## Pronóstico ----
pronos_mod1 <- predict(mod1, n.ahead = 15, ci=0.95)
pronos_mod2 <- predict(mod2, n.ahead = 15, ci=0.95)
## Causalidad Granger ----
granger_mod1 <- causality(mod1,cause = "DXY")
granger_mod1
granger_mod1 <- causality(mod1,cause = "Brent")
granger_mod1
granger_mod2 <- causality(mod2,cause = "DXY")
granger_mod2
granger_mod2 <- causality(mod2,cause = "Brent")
granger_mod2
irf_mod2 <- irf(mod2,impulse = c("Brent","DXY")
,response = "TRM", cumulative = F,ortho=F
,boot=T,ci=0.95,n.ahead = 24)
windows()
plot(irf_mod2)
windows()
plot(fevd_mod1, name="TRM")
fevd_mod1 <- vars::fevd(mod1, n.ahead = 12)
windows()
plot(fevd_mod1, name="TRM")
windows()
plot(fevd_mod1)
fevd_mod2 <- vars::fevd(mod2, n.ahead = 12)
windows()
plot(fevd_mod2)
ur.kpss(Datos_ent_xts_slx$TRM,type = "mu",use.lag = 8)
ur.kpss(Datos_ent_xts_slx$TRM,type = "tau",use.lag = 8)
ur.sp(Datos_ent_xts_slx$TRM,type = "tau",plo.deg = 2)
ur.sp(Datos_ent_xts_slx$TRM,type = "tau",pol.deg = 2)
ur.ers(Datos_ent_xts_slx$TRM,type = "tau",type="DF-GLS")
ur.ers(Datos_ent_xts_slx$TRM,type = "tau",type="DF-GLS")
ur.ers(Datos_ent_xts_slx$TRM,type = "tau",type="P-test")
ur.ers(Datos_ent_xts_slx$TRM,type = "tau",type="DF-GLS")
ur.ers(Datos_ent_xts_slx$TRM,type="DF-GLS")
ur.kpss(Datos_ent_xts_slx$TRM,type = "tau",use.lag = 8)
ur.sp(Datos_ent_xts_slx$TRM,type = "tau",pol.deg = 2)
ur.ers(Datos_ent_xts_slx$TRM,type="DF-GLS")
ur.pp(Datos_ent_xts_slx$TRM,type="Z-tau",model = "constant",lags = "long")
ur.kpss(Datos_ent_xts_slx$TRM,type = "tau",use.lag = 8)
ur.sp(Datos_ent_xts_slx$TRM,type = "tau",pol.deg = 2)
ur.ers(Datos_ent_xts_slx$TRM,type="DF-GLS")
ur.pp(Datos_ent_xts_slx$TRM,type="Z-tau",model = "constant",lags = "long")
ur.kpss(Datos_ent_xts$TRM,type = "tau",use.lag = 8)
ur.sp(Datos_ent_xts$TRM,type = "tau",pol.deg = 2)
ur.ers(Datos_ent_xts$TRM,type="DF-GLS")
ur.pp(Datos_ent_xts$TRM,type="Z-tau",model = "constant",lags = "long")
SB_TRM <- ur.za(Datos_ent_xts$TRM, model = "both", lag = 8)
windows()
plot(SB_TRM)
SB_TRM
SB_TRM@teststat
SB_TRM@testreg
summary(SB_TRM@testreg)
SB_TRM <- ur.za(Datos_ent_xts$TRM, model = "both", lag = 4)
windows()
plot(SB_TRM)
SB_Brent <- ur.za(Datos_ent_xts$Brent, model = "both", lag = 4)
windows()
plot(SB_Brent)
summary(SB_Brent@testreg)
SB_Brent <- ur.za(Datos_ent_xts$DXY, model = "both", lag = 4)
windows()
plot(SB_Brent)
SB_TRM <- ur.za(Datos_ent_xts_slx$TRM, model = "both", lag = 4)
windows()
plot(SB_TRM)
SB_TRM <- ur.za(Datos_ent_xts_slx$DXY, model = "both", lag = 4)
windows()
plot(SB_TRM)
SB_TRM
SB_TRM@bpoint
SB_TRM <- ur.za(log(Datos_ent_xts$TRM), model = "both", lag = 4)
windows()
plot(SB_TRM)
RLP_test1 <- summary(ca.po(Datos_ent_xts, demean = "const", type = "Pz"))
RLP_test1
RLP_test2 <- summary(ca.po(Datos_ent_xts, demean = "const", type = "Pu"))
RLP_test2
summary(ur.kpss(Datos_ent_xts$TRM,type = "tau",use.lag = 8))
summary(ur.sp(Datos_ent_xts$TRM,type = "tau",pol.deg = 2))
summary(ur.ers(Datos_ent_xts$TRM,type="DF-GLS"))
summary(ur.pp(Datos_ent_xts$TRM,type="Z-tau",model = "constant",lags = "long"))
SB_TRM <- ur.za(log(Datos_ent_xts$TRM), model = "both", lag = 4)
windows()
plot(SB_TRM)
summary(ca.jo(log(Datos_ent_xts),type = c("trace"),ecdet = c("const")))
summary(ur.kpss(log(Datos_ent_xts),type = "tau",use.lag = 8))
summary(ur.kpss(log(Datos_ent_xts),type = "tau",use.lag = 4))
pacman::p_load(readxl, sandwich, car, lmtest, TSstudio, lmtest, forecast
, vars, urca, tsDyn, tidyverse, glue, xts, tseries)
entradas <- "Datos_ent/"
salidas <- "Datos_sal/"
# ------------------------------------------------------------------------------#
# Lectura datos ----
Datos_ent  <- read_xlsx(glue("{entradas}Base.xlsx")
,sheet = "Base",range = "a3:d214")
Datos_ent_xts <- xts(Datos_ent[,-1],order.by = as.Date(Datos_ent$fecha))
# Gráficos ----
#------------------------------------------------------------------------------#
ts_plot(Datos_ent_xts
,type = "multiple"
,slider = F)
## TRM
adf.test(Datos_ent_xts[,1])
kpss.test(Datos_ent_xts[,1]) # H0: serie estacionaria
pp.test(Datos_ent_xts[,1])   # H0: serie no estacionaria
adf.test(Datos_ent_xts[,2])
kpss.test(Datos_ent_xts[,2]) # H0: serie estacionaria
pp.test(Datos_ent_xts[,2])   # H0: serie no estacionaria
adf.test(Datos_ent_xts[,3])
kpss.test(Datos_ent_xts[,3]) # H0: serie estacionaria
pp.test(Datos_ent_xts[,3])   # H0: serie no estacionaria
# diff aplicar ----
ndiffs(Datos_ent_xts[,1])
ndiffs(Datos_ent_xts[,2])
ndiffs(Datos_ent_xts[,3])
Datos_ent_xts %>% log() %>% diff(.,lag=1, differences = 1 ) %>% na.omit()
# Calculo retornos log. ----
Datos_ent_xts_dlx <- Datos_ent_xts %>% log() %>% diff(.,lag=1, differences = 1 ) %>% na.omit()
Datos_ent_xts_slx <- Datos_ent_xts %>% log() %>% diff(.,lag=12, differences = 1 ) %>% na.omit()
# Gráficos ----
#------------------------------------------------------------------------------#
ts_plot(Datos_ent_xts_slx
,type = "multiple"
,slider = F)
# Las series de retornos log mensuales son I(0)
## TRM
adf.test(Datos_ent_xts_dlx[,1])
# Las series de retornos log mensuales son I(0)
## TRM
adf.test(Datos_ent_xts_dlx[,1])
kpss.test(Datos_ent_xts_dlx[,1]) # H0: serie estacionaria
pp.test(Datos_ent_xts_dlx[,1])   # H0: serie no estacionaria
# Las series de retornos log anuales son I(0)
## TRM
adf.test(Datos_ent_xts_slx[,1])
kpss.test(Datos_ent_xts_slx[,1]) # H0: serie estacionaria
pp.test(Datos_ent_xts_slx[,1])   # H0: serie no estacionaria
## retornos log. mensuales
VARselect(Datos_ent_xts_dlx,lag.max = 6,type = "both")
## retornos log. anuales
VARselect(Datos_ent_xts_slx,lag.max = 6,type = "const")
test <- forecast::Ccf(x = Datos_ent_xts_slx$Brent,y = Datos_ent_xts_slx$TRM
,lag.max = 18,plot = T,type = "correlation")
test <- forecast::Ccf(x = Datos_ent$Brent ,y = Datos$TRM
,lag.max = 18,plot = T,type = "correlation")
test <- forecast::Ccf(x = Datos_ent$Brent ,y = Datos_ent$TRM
,lag.max = 18,plot = T,type = "correlation")
test
## retornos log. mensuales
VARselect(Datos_ent_xts_dlx,lag.max = 6,type = "both")
## retornos log. anuales
VARselect(Datos_ent_xts_slx,lag.max = 6,type = "const")
Datos_ent_xts_dlx
mod1 <- VAR(y = Datos_ent_xts_dlx, p = 2, type = "const")
summary(mod1)
mod2 <- VAR(y = Datos_ent_xts_slx, lag.max = 4, type = "const", ic = "AIC")
summary(mod2)
summary(mod2, equation = "TRM")
windows()
plot(mod2, names = "TRM")
windows()
plot(mod2, names = "TRM")
windows()
plot(mod1, names = "TRM")
## correlación serial ----
serial_mod1 <- serial.test(mod1,lags.pt = 16, type = "PT.asymptotic")
windows()
plot(serial_mod1, names= "TRM")
serial_mod2 <- serial.test(mod2,lags.pt = 16, type = "PT.asymptotic")
windows()
plot(serial_mod2, names= "TRM")
## Normalidad ----
normal_mod1 <- normality.test(mod1, multivariate.only = "TRUE")
normal_mod1
normal_mod2 <- normality.test(mod2, multivariate.only = "TRUE")
normal_mod2
## Heterocedasticidad ----
hetero_mod1 <- arch.test(mod1, multivariate.only = "TRUE")
hetero_mod2 <- arch.test(mod2, multivariate.only = "TRUE")
hetero_mod2
windows()
plot(stability(mod1, type = "fluctuation"))
resi <- residuals(mod2)
i=1
k=1
for(k in 1:ncol(resi)){
Ljung_Box <- NULL
for(i in 1:18){
Ljung_Box1 <- Box.test(resi[,k], lag = i, type="Ljung")$p.value
Ljung_Box <- rbind(Ljung_Box, cbind(i,Ljung_Box1))
}
colnames(Ljung_Box) <- c("Rezago","p-valor");
cat(" \n \n")
cat("Prueba Ljung_Box \n \n")
Ljung_Box
windows()
plot(Ljung_Box, main=paste("Prueba Ljung_Box \n H0: residuales ecuación ",k," son iid",sep=""))
abline(h=0.05,col="red")
}
## Pronóstico ----
pronos_mod1 <- predict(mod1, n.ahead = 15, ci=0.95)
windows()
plot(pronos_mod1)
View(pronos_mod1)
pronos_mod1[["fcst"]][["TRM"]]
windows()
fanchart(pronos_mod1)
pronos_mod2 <- predict(mod2, n.ahead = 15, ci=0.95)
windows()
fanchart(pronos_mod2, names= "TRM" )
windows()
fanchart(pronos_mod2)
## Causalidad Granger ---- "Si una variable aporta sobre el pronóstico de mi variable de interés"
granger_mod1 <- causality(mod1,cause = "DXY")
granger_mod1
granger_mod2 <- causality(mod2,cause = "DXY")
granger_mod2
irf_mod2 <- irf(mod2,impulse = c("Brent","DXY")
,response = "TRM", cumulative = F,ortho=F
,boot=T,ci=0.95,n.ahead = 24)
irf_mod2 <- irf(mod2,impulse = c("Brent","DXY")
,response = "TRM", cumulative = F,ortho=F
,boot=T,ci=0.95,n.ahead = 24)
windows()
plot(irf_mod2)
fevd_mod1 <- vars::fevd(mod1, n.ahead = 12)
fevd_mod2 <- vars::fevd(mod2, n.ahead = 12)
windows()
plot(fevd_mod2)
pacman::p_load(readxl, sandwich, car, lmtest, TSstudio, lmtest, forecast
, vars, urca, tsDyn, tidyverse, glue, xts, tseries)
entradas <- "Datos_ent/"
salidas <- "Datos_sal/"
# ------------------------------------------------------------------------------#
# Lectura datos ----
Datos_ent  <- read_xlsx(glue("{entradas}Base.xlsx")
,sheet = "Base",range = "a3:e321")
Datos_exo  <- read_xlsx(glue("{entradas}Base.xlsx")
,sheet = "Exogenas",range = "a3:c435")
Datos_ent_xts <- xts(Datos_ent[,-1],order.by = as.Date(Datos_ent$fecha))
Datos_exo_xts <- xts(Datos_ent[,-1],order.by = as.Date(Datos_ent$fecha))
# Calculo retornos log. ----
Datos_ent_xts_dlx <- Datos_ent_xts %>% log() %>% diff(.,lag=1, differences = 1 ) %>% na.omit()
Datos_ent_xts_slx <- Datos_ent_xts %>% log() %>% diff(.,lag=12, differences = 1 ) %>% na.omit()
Datos_exo_xts_dlx <- Datos_exo_xts %>% log() %>% diff(.,lag=1, differences = 1 ) %>% na.omit()
Datos_exo_xts_slx <- Datos_exo_xts %>% log() %>% diff(.,lag=12, differences = 1 ) %>% na.omit()
# Gráficos ----
#------------------------------------------------------------------------------#
ts_plot(Datos_ent_xts_slx
,type = "multiple"
,slider = F)
test <- ccf(x = as.numeric(Datos_ent_xts_slx$EMBI) ,y = as.numeric(Datos_ent_xts_slx$TRM)
,lag.max = 18,plot = T,type = "correlation")
## retornos log. mensuales
VARselect(Datos_ent_xts_dlx,lag.max = 6,type = "none")
## retornos log. anuales
VARselect(Datos_ent_xts_slx,lag.max = 6,type = "const")
mod1 <- VAR(y = Datos_ent_xts_dlx, p = 1, type = "none")
summary(mod1)
## retornos log. mensuales
VARselect(Datos_ent_xts_dlx,lag.max = 6,type = "none")
## retornos log. mensuales
VARselect(Datos_ent_xts_dlx,lag.max = 6,type = "both")
## retornos log. mensuales
VARselect(Datos_ent_xts_dlx,lag.max = 6,type = "both")
## retornos log. mensuales
VARselect(Datos_ent_xts_dlx,lag.max = 10,type = "both")
## retornos log. anuales
VARselect(Datos_ent_xts_slx,lag.max = 10,type = "const")
mod2 <- VAR(y = Datos_ent_xts_slx, lag.max = 3, type = "both", ic = "AIC")
summary(mod2)
summary(mod2, equation = "TRM")
windows()
plot(mod2, names = "TRM")
pronos_mod2 <- predict(mod2, n.ahead = 15, ci=0.95)
windows()
plot(pronos_mod2, equation = "TRM")
windows()
fanchart(pronos_mod2, equation = "TRM")
pronos_mod2 <- predict(mod2, n.ahead = 15, ci=0.95)
windows()
plot(pronos_mod2,names="TRM")
windows()
fanchart(pronos_mod2,names="TRM")
fevd_mod1 <- vars::fevd(mod1, n.ahead = 12)
fevd_mod1 <- vars::fevd(mod1, n.ahead = 12)
windows()
plot(fevd_mod1,names="TRM")
fevd_mod2 <- vars::fevd(mod2, n.ahead = 12)
windows()
plot(fevd_mod2,names="TRM")
fevd_mod2 <- vars::fevd(mod2, n.ahead = 18)
windows()
plot(fevd_mod2,names="TRM")
pacman::p_load(readxl, sandwich, car, lmtest, TSstudio, lmtest, forecast
, vars, urca, tsDyn, tidyverse, glue, xts, tseries)
entradas <- "Datos_ent/"
salidas <- "Datos_sal/"
# ------------------------------------------------------------------------------#
# Lectura datos ----
Datos_ent  <- read_xlsx(glue("{entradas}Base.xlsx")
,sheet = "Base",range = "a3:e321")
Datos_exo  <- read_xlsx(glue("{entradas}Base.xlsx")
,sheet = "Exogenas",range = "a3:c435")
Datos_ent_xts <- xts(Datos_ent[,-1],order.by = as.Date(Datos_ent$fecha))
Datos_exo_xts <- xts(Datos_ent[,-1],order.by = as.Date(Datos_ent$fecha))
# diff aplicar ----
ndiffs(Datos_ent_xts[,1])
ndiffs(Datos_ent_xts[,2])
ndiffs(Datos_ent_xts[,3])
ndiffs(Datos_ent_xts[,4])
# Calculo retornos log. ----
Datos_ent_xts_dlx <- Datos_ent_xts %>% log() %>% diff(.,lag=1, differences = 1 ) %>% na.omit()
Datos_ent_xts_slx <- Datos_ent_xts %>% log() %>% diff(.,lag=12, differences = 1 ) %>% na.omit()
Datos_exo_xts_dlx <- Datos_exo_xts %>% log() %>% diff(.,lag=1, differences = 1 ) %>% na.omit()
Datos_exo_xts_slx <- Datos_exo_xts %>% log() %>% diff(.,lag=12, differences = 1 ) %>% na.omit()
# Gráficos ----
#------------------------------------------------------------------------------#
ts_plot(Datos_ent_xts_slx
,type = "single"
,slider = F)
## retornos log. mensuales
VARselect(Datos_ent_xts_dlx,lag.max = 10,type = "both")
## retornos log. anuales
VARselect(Datos_ent_xts_slx,lag.max = 10,type = "const")
mod1 <- VAR(y = Datos_ent_xts_dlx, p = 1, type = "none")
summary(mod1)
mod1 <- VAR(y = Datos_ent_xts_dlx, p = 1, type = "both")
summary(mod1)
windows()
plot(mod1, names = "TRM")
mod2 <- VAR(y = Datos_ent_xts_slx, lag.max = 3, type = "both", ic = "AIC")
summary(mod2)
windows()
plot(mod2, names = "TRM")
roots(mod1)
windows()
plot(stability(mod2, type = "OLS-CUSUM"))
windows()
plot(stability(mod1, type = "fluctuation"))
irf_mod1 <- irf(mod1,impulse = c("TRM","Brent","DXY","EMBI")
,response = "TRM", cumulative = T,
,n.ahead = 24)
windows()
plot(irf_mod1)
irf_mod2 <- irf(mod2,impulse = c("TRM","Brent","DXY","EMBI")
,response = "TRM", cumulative = F,ortho=T
,boot=T,ci=0.95,n.ahead = 24)
windows()
plot(irf_mod2)
fevd_mod1 <- vars::fevd(mod1, n.ahead = 12)
windows()
plot(fevd_mod1,names="TRM")
# (Modelo de (Intro Cointegración) ----
#------------------------------------------------------------------------------#
Datos_ent_xts_lx <- Datos_ent_xts %>% log()
Datos_exo_xts_lx <- Datos_exo_xts %>% log()
names(Datos_ent_xts_lx)
# modelo lineal ----
modlin1 <- lm(formula = TRM~EMBI,data = Datos_exo_xts_lx)
modlin1
summary(modlin1)
residualPlot(modlin1)
ts_plot(Datos_ent_xts_lx
,type = "multiple"
,slider = F)
ts_plot(Datos_ent_xts_lx
,type = "single"
,slider = F)
forecast::checkresiduals(modlin1)
# modelo lineal ----
modlin1 <- lm(formula = TRM~DXY,data = Datos_exo_xts_lx)
summary(modlin1)
forecast::checkresiduals(modlin1)
# Cointegración ----
#------------------------------------------------------------------------------#
Datos_ent_xts_lx <- Datos_ent_xts %>% log() %>% mutate(tendencia =seq_along(.))
# modelo lineal ----
modlin1 <- lm(formula = TRM~DXY,data = Datos_ent)
summary(modlin1)
# modelo lineal ----
modlin1 <- lm(formula = TRM~EMBI,data = Datos_ent)
summary(modlin1)
# modelo lineal ----
modlin1 <- lm(formula = TRM~Brent,data = Datos_ent)
summary(modlin1)
# modelo lineal ----
modlin1 <- lm(formula = TRM~Fecha+Brent,data = Datos_ent)
names(Datos_ent)
# modelo lineal ----
modlin1 <- lm(formula = TRM~fecha+Brent,data = Datos_ent)
summary(modlin1)
forecast::checkresiduals(modlin1)
residualPlot(modlin1)
names(Datos_ent)
# modelo lineal ----
modlin1 <- lm(formula = TRM~fecha+DXY,data = Datos_ent)
summary(modlin1)
forecast::checkresiduals(modlin1)
# modelo lineal ----
modlin1 <- lm(formula = TRM~fecha+DXY,data = log(Datos_ent))
# modelo lineal ----
test <- Datos_ent %>% dplyr::select(-fecha) %>% log() %>% mutate(tendencia=seq_along(.))
# modelo lineal ----
test <- Datos_ent %>% dplyr::select(-fecha) %>% log() %>% mutate(tendencia=seq(1,nrow(.),by=1))
test
modlin1 <- lm(formula = TRM~0+DXY,data = test)
summary(modlin1)
adf.test(residuals(mod1))
residuales <- as.ts(modlin1$residuals)
adf.test(residuales)
residuales <- as.ts(modlin1$residuals)
forecast::checkresiduals(modlin1)
residualPlot(modlin1)
adf.test(residuales)
kpss.test(residuales) # H0: serie estacionaria
pp.test(residuales)   # H0: serie no estacionaria
# prueba dos con constante y tendencia
modlin1 <- lm(formula = TRM~tendencia+DXY,data = test)
modlin1 <- lm(formula = TRM~0+DXY,data = test)
# prueba dos con constante y tendencia
modlin2 <- lm(formula = TRM~tendencia+DXY,data = test)
# prueba dos con constante y tendencia
modlin2 <- lm(formula = TRM~tendencia+DXY,data = test)
summary(modlin2)
residuales2 <- as.ts(modlin2$residuals)
adf.test(residuales)
adf.test(residuales2)
# prueba dos con constante y tendencia
modlin2 <- lm(formula = 0+TRM~tendencia+DXY,data = test)
summary(modlin2)
# prueba dos con constante y tendencia
modlin2 <- lm(formula = TRM~0+tendencia+DXY,data = test)
summary(modlin2)
residuales2 <- as.ts(modlin2$residuals)
adf.test(residuales2)
kpss.test(residuales2) # H0: serie estacionaria
pp.test(residuales2)   # H0: serie no estacionaria
